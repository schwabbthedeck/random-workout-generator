{"version":3,"sources":["components/zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.mp3","components/images/20BeginnerYogaPosesNumbered.png","components/MoveReminder.js","components/TopRow.js","components/RandomWorkout.js","components/YogaWorkout.js","components/AdvancedOptions.js","components/WorkoutContainer.js","components/AnxietyContainer.js","components/Footer.js","MainContainer.js","serviceWorker.js","index.js"],"names":["module","exports","MoveReminder","state","checked","showAlert","handleChange","bind","rememberToMove","timeoutFunction","audio","Audio","alertNoise","this","setState","setTimeout","clearTimeout","play","Card","className","onChange","Alert","variant","show","onClose","closeAlert","dismissible","React","Component","TopRow","Container","fluid","Row","Col","xsm","Button","size","onClick","window","location","reload","props","anxiousOnClick","ChooseAWorkout","workouts","Math","floor","random","length","RandomWorkout","intro","buttonText","workout","repNumber","ceil","workoutText","message","id","md","span","offset","block","chooseWorkout","ChooseAYogaPose","yogaPoses","poseName","backgroundPosition","width","height","url","YogaWorkout","yogaPose","yogaPoseContent","divImageStyle","backgroundImage","yogaImage","margin","borderRadius","style","href","target","rel","chooseYogaPose","value","isChecked","AdvancedOptions","onSelectedWorkoutsOptionsChange","workoutIds","selectedWorkoutIds","newWorkoutIds","includes","filter","i","numberOfExercises","errors","mustBeNumberMessage","selectAllExerciseOptions","onChangeInputs","changeMountainClimberState","numberOfReps","addMountainClimbers","submitError","event","Number","isInteger","parseInt","content","sm","ListGroup","map","Item","Form","Check","type","label","marginTop","Group","controlId","Label","Control","placeholder","defaultValue","Text","selectedWorkouts","some","randomWorkouts","randomIndex","push","splice","item","key","runRandomWorkout","backToForm","WorkoutContainer","Tabs","defaultActiveKey","Tab","eventKey","title","AnxietyContainer","alt","src","Footer","icon","faGithub","MainContainer","anxious","deepBreath","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7683416d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.18dbe7e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/20BeginnerYogaPosesNumbered.29971f67.png\";","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Switch from \"react-switch\";\r\nimport './MoveReminder.css';\r\nimport alertNoise from './zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.mp3';\r\n\r\nclass MoveReminder extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      checked: false,\r\n      showAlert: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.rememberToMove = this.rememberToMove.bind(this);\r\n    this.timeoutFunction = {};\r\n    this.audio = new Audio(alertNoise);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    this.setState({ checked: checked });\r\n    if (checked) {\r\n      this.timeoutFunction = setTimeout(this.rememberToMove, 3.6e+6);\r\n      // this.timeoutFunction = setTimeout(this.rememberToMove, 3000);\r\n    } else {\r\n      clearTimeout(this.timeoutFunction);\r\n    }\r\n  };\r\n\r\n  rememberToMove() {\r\n    this.audio.play();\r\n    this.setState({ showAlert: true });\r\n    // alert(\"It's been an hour! Get up and move!\");\r\n  }\r\n\r\n  closeAlert() {\r\n    this.setState({ showAlert: false });\r\n    this.timeoutFunction = setTimeout(this.rememberToMove, 3.6e+6);\r\n    // this.timeoutFunction = setTimeout(this.rememberToMove, 3000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"move-reminder\">\r\n        <label>\r\n          <div className=\"switch-label\">Remind me to move every hour!</div>\r\n          <Switch onChange={this.handleChange} checked={this.state.checked} className=\"switch\" />\r\n        </label>\r\n        <Alert variant=\"info\" show={this.state.showAlert} onClose={() => this.closeAlert()} dismissible>\r\n          <p>It's been an hour! Get up and move!</p>\r\n        </Alert>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoveReminder;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport MoveReminder from './MoveReminder';\r\n\r\nclass TopRow extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"top-row\">\r\n        <Row>\r\n          <Col xsm={4}>\r\n            <Button className=\"reset-button\" variant=\"outline-primary\" size=\"sm\"\r\n              onClick={() => window.location.reload(false)}>\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n          <Col xsm={4}>\r\n            <MoveReminder />\r\n          </Col>\r\n          <Col xsm={4}>\r\n            <Button className=\"anxiety-button\" variant=\"warning\" size=\"sm\"\r\n              onClick={this.props.anxiousOnClick}>\r\n              Help, I'm Anxious!\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopRow;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass RandomWorkout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intro: true,\r\n      buttonText: \"Pick Me A Random Workout!\",\r\n      workout: '',\r\n      repNumber: 0\r\n    }\r\n  }\r\n\r\n  chooseWorkout() {\r\n    this.setState({\r\n      intro: false,\r\n      buttonText: \"I Want A New Workout!\",\r\n      workout: ChooseAWorkout(),\r\n      repNumber: Math.ceil(Math.random() * 14),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let workoutText, message;\r\n    if (!this.state.intro) {\r\n      message = \"Hit the button for another workout!\";\r\n      workoutText = (<ul>\r\n          <li>{this.state.repNumber} {this.state.workout}</li>\r\n        </ul>);\r\n    } else {\r\n      message = \"Gives you a random workout exercise to do anywhere.\";\r\n    }\r\n    return (\r\n      <Container id=\"main-container\" fluid>\r\n        <Row className=\"intro-information\">\r\n          <Col>\r\n            <div>\r\n              <h4>Welcome to the Random Workout Generator!</h4>\r\n              <div>{message}</div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {workoutText}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"random-button-row\">\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <Button className=\"random-button\" variant=\"primary\" size=\"lg\" block\r\n              onClick={() => this.chooseWorkout()}>\r\n              {this.state.buttonText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ChooseAWorkout() {\r\n  var workouts = [\"Pushups\", \"Crunches\", \"Squats\", \"Burpees\", \"Bicep Curls\", \"Spider Crunch\", \"Shoulder Press\", \"Dips\", \"Upright Row\", \"Superman Crunch\", \"Side Lunges\", \"Tri Extensions\",  \"Quick Squats\", \"Dumbbell Rows\", \"Side to Side Lunge Walk\", \"Zottman Curl\", \"Squat with Weight Swing\", \"Side Crunches\", \"Side Plank Rotations with Overhead Reach\", \"Incline Curl\"];\r\n  var randomNumber = Math.floor(Math.random() * workouts.length);\r\n  return workouts[randomNumber];\r\n}\r\n\r\nexport default RandomWorkout;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n// import yogaImage from './images/20BeginnerYogaPoses.png';\r\nimport yogaImage from './images/20BeginnerYogaPosesNumbered.png';\r\n\r\nclass YogaWorkout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intro: true,\r\n      buttonText: \"Pick Me A Random Yoga Pose!\",\r\n      yogaPose: {}\r\n    }\r\n  }\r\n\r\n  chooseYogaPose() {\r\n    this.setState({\r\n      intro: false,\r\n      buttonText: \"Choose A New Yoga Pose!\",\r\n      yogaPose: ChooseAYogaPose()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let yogaPoseContent, message;\r\n    if(!this.state.intro) {\r\n      const divImageStyle = {\r\n        backgroundImage: 'url(' + yogaImage + ')',\r\n        backgroundPosition: this.state.yogaPose.backgroundPosition,\r\n        width: this.state.yogaPose.width,\r\n        height: this.state.yogaPose.height,\r\n        margin: 'auto',\r\n        borderRadius: '10px'\r\n      }\r\n      message = \"Hold pose 3-5 breaths. Pay attention to the way the pose makes your body feel.\";\r\n      yogaPoseContent = (\r\n        <div>\r\n          <h6>{this.state.yogaPose.poseName}</h6>\r\n          <div style={divImageStyle}></div>\r\n          <div><a href={this.state.yogaPose.url} target=\"_blank\" rel=\"noopener noreferrer\">More information about this pose</a></div>\r\n        </div>\r\n      );\r\n    } else {\r\n      message = \"Gives you a random yoga pose to do as a stretch break.\"\r\n    }\r\n    return (\r\n      <Container id=\"main-container\" fluid>\r\n        <Row className=\"intro-information\">\r\n          <Col>\r\n            <div>\r\n              <h4>Random Yoga Pose Selector</h4>\r\n              <div>{message}</div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {yogaPoseContent}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"random-button-row\">\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <Button className=\"random-button\" variant=\"primary\" size=\"lg\" block\r\n              onClick={() => this.chooseYogaPose()}>\r\n              {this.state.buttonText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ChooseAYogaPose() {\r\n  const yogaPoses = [\r\n    {\r\n      poseName: \"Mountain\",\r\n      backgroundPosition: \"-82px -262px\",\r\n      width: \"75px\",\r\n      height: \"171px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#mountain\"\r\n    },\r\n    {\r\n      poseName: \"Tree\",\r\n      backgroundPosition: \"-215px -262px\",\r\n      width: \"76px\",\r\n      height: \"170px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#tree\"\r\n    },\r\n    {\r\n      poseName: \"Chair\",\r\n      backgroundPosition: \"-354px -259px\",\r\n      width: \"75px\",\r\n      height: \"170px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#chair\"\r\n    },\r\n    {\r\n      poseName: \"Standing Fold\",\r\n      backgroundPosition: \"-510px -269px\",\r\n      width: \"65px\",\r\n      height: \"160px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#standinghalfbend\"\r\n    },\r\n    {\r\n      poseName: \"Down Dog\",\r\n      backgroundPosition: \"-640px -272px\",\r\n      width: \"140px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#downdog\"\r\n    },\r\n    {\r\n      poseName: \"Plank\",\r\n      backgroundPosition: \"-24px -467px\",\r\n      width: \"157px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#plank\"\r\n    },\r\n    {\r\n      poseName: \"Low Lunge\",\r\n      backgroundPosition: \"-186px -467px\",\r\n      width: \"155px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#lowlunge\"\r\n    },\r\n    {\r\n      poseName: \"High Lunge\",\r\n      backgroundPosition: \"-355px -465px\",\r\n      width: \"130px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#highlunge\"\r\n    },\r\n    {\r\n      poseName: \"Warrior I\",\r\n      backgroundPosition: \"-498px -459px\",\r\n      width: \"120px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#warrior1\"\r\n    },\r\n    {\r\n      poseName: \"Warrior II\",\r\n      backgroundPosition: \"-628px -472px\",\r\n      width: \"166px\",\r\n      height: \"144px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#warrior2\"\r\n    },\r\n    {\r\n      poseName: \"Triangle\",\r\n      backgroundPosition: \"-38px -670px\",\r\n      width: \"144px\",\r\n      height: \"150px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#triangle\"\r\n    },\r\n    {\r\n      poseName: \"Cobra\",\r\n      backgroundPosition: \"-186px -688px\",\r\n      width: \"178px\",\r\n      height: \"130px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#babycobra\"\r\n    },\r\n    {\r\n      poseName: \"Locust\",\r\n      backgroundPosition: \"-362px -688px\",\r\n      width: \"174px\",\r\n      height: \"128px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#locust\"\r\n    },\r\n    {\r\n      poseName: \"Cat\",\r\n      backgroundPosition: \"-530px -688px\",\r\n      width: \"130px\",\r\n      height: \"128px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#cat\"\r\n    },\r\n    {\r\n      poseName: \"Cow\",\r\n      backgroundPosition: \"-670px -682px\",\r\n      width: \"130px\",\r\n      height: \"128px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#cow\"\r\n    },\r\n    {\r\n      poseName: \"Easy Seat\",\r\n      backgroundPosition: \"-62px -862px\",\r\n      width: \"98px\",\r\n      height: \"122px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#easyseat\"\r\n    },\r\n    {\r\n      poseName: \"Seated Twist\",\r\n      backgroundPosition: \"-228px -862px\",\r\n      width: \"115px\",\r\n      height: \"124px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#halffish\"\r\n    },\r\n    {\r\n      poseName: \"Hero\",\r\n      backgroundPosition: \"-368px -862px\",\r\n      width: \"88px\",\r\n      height: \"120px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#hero\"\r\n    },\r\n    {\r\n      poseName: \"Child's Pose\",\r\n      backgroundPosition: \"-470px -872px\",\r\n      width: \"144px\",\r\n      height: \"110px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#child\"\r\n    }\r\n  ];\r\n\r\n  var randomNumber = Math.floor(Math.random() * yogaPoses.length);\r\n  return yogaPoses[randomNumber];\r\n}\r\n\r\nexport default YogaWorkout;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// workout object\r\nlet workouts = [\r\n  {\r\n    id: 1,\r\n    value: \"Bicep Curls\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"Burpees\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"Crunches\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"Dips\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"Dumbbell Rows\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"Incline Curl\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 7,\r\n    value: \"Pushups\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 8,\r\n    value: \"Quick Squats\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 9,\r\n    value: \"Shoulder Press\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 10,\r\n    value: \"Side Crunches\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 11,\r\n    value: \"Side Lunges\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 12,\r\n    value: \"Side Plank Rotations with Overhead Reach\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 13,\r\n    value: \"Side to Side Lunge Walk\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 14,\r\n    value: \"Spider Crunch\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 15,\r\n    value: \"Squat with Weight Swing\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 16,\r\n    value: \"Squats\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 17,\r\n    value: \"Superman Crunch\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 18,\r\n    value: \"Tri Extensions\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 19,\r\n    value: \"Upright Row\",\r\n    isChecked: true\r\n  },\r\n  {\r\n    id: 20,\r\n    value: \"Zottman Curl\",\r\n    isChecked: true\r\n  }\r\n];\r\n\r\n// Number validation error message\r\nlet mustBeNumberMessage = \"Input must be a positive integer.\";\r\n\r\nclass AdvancedOptions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSelectedWorkoutsOptionsChange = this.onSelectedWorkoutsOptionsChange.bind(this);\r\n    this.selectAllExerciseOptions = this.selectAllExerciseOptions.bind(this);\r\n    this.onChangeInputs = this.onChangeInputs.bind(this);\r\n    this.changeMountainClimberState = this.changeMountainClimberState.bind(this);\r\n    this.state = {\r\n      intro: true,\r\n      selectedWorkoutIds: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\r\n      numberOfReps: '',\r\n      numberOfExercises: 5,\r\n      addMountainClimbers: false,\r\n      submitError: '',\r\n      errors: {\r\n        numberOfReps: '',\r\n        numberOfExercises: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  // remove id from state or add it back on checkbox change\r\n  onSelectedWorkoutsOptionsChange = (id) => {\r\n    const workoutIds = this.state.selectedWorkoutIds;\r\n    const newWorkoutIds = workoutIds.includes(id) ? workoutIds.filter(i => i !== id) : [...workoutIds, id];\r\n    this.setState({\r\n      selectedWorkoutIds: newWorkoutIds\r\n    });\r\n    if (this.state.numberOfExercises > newWorkoutIds.length) {\r\n      let errors = this.state.errors;\r\n      errors.numberOfExercises = mustBeNumberMessage + ' And less than or equal to the number of exercises selected.';\r\n      this.setState({ errors });\r\n    } else {\r\n      let errors = this.state.errors;\r\n      errors.numberOfExercises = '';\r\n      this.setState({ errors });\r\n    }\r\n  }\r\n\r\n  // set all exercises on select all button\r\n  selectAllExerciseOptions() {\r\n    const allWorkoutIds = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\r\n    this.setState({\r\n      selectedWorkoutIds: allWorkoutIds\r\n    })\r\n  }\r\n\r\n  // set input value on change\r\n  onChangeInputs(event) {\r\n    const { id, value } = event.target;\r\n    let errors = this.state.errors;\r\n    // check that the values are positive integers\r\n    // add error if they aren't\r\n    switch (id) {\r\n      case 'numberOfReps':\r\n        errors.numberOfReps = ((Number.isInteger(Number(value)) && parseInt(value) > 0) || value === '') ? '' : mustBeNumberMessage;\r\n        break;\r\n      case 'numberOfExercises':\r\n        // check that they are positive and less than the number of selected exercises\r\n        errors.numberOfExercises = (Number.isInteger(Number(value)) && parseInt(value) > 0 && Number(value) <= this.state.selectedWorkoutIds.length) ? '' : mustBeNumberMessage + ' And less than or equal to the number of exercises selected.';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (id === 'numberOfReps' && value === '') {\r\n      // if the the number of reps is blank set to 0 for random\r\n      this.setState({ errors, [id]: '' });\r\n    } else {\r\n      this.setState({ errors, [id]: Number(value) });\r\n    }\r\n  }\r\n\r\n  // maintain state on checked box for mountain climber option\r\n  changeMountainClimberState(event) {\r\n    const { id, checked } = event.target;\r\n    this.setState({ [id]: checked });\r\n  }\r\n\r\n  runRandomWorkout() {\r\n    // check that something is selected\r\n    if (this.state.selectedWorkoutIds.length > 0) {\r\n      this.setState({\r\n        intro: false,\r\n        submitError: ''\r\n      })\r\n    } else {\r\n      // nothing selected\r\n      this.setState({\r\n        submitError: 'Please select at least one exercise.'\r\n      })\r\n    }\r\n  }\r\n\r\n  backToForm() {\r\n    this.setState({\r\n      intro: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let message = \"\";\r\n    let content;\r\n    if (this.state.intro) {\r\n      message = \"Select which exercises, the number of reps, and the number of different exercises you want to make up your workout.\";\r\n      content = (<Row>\r\n        <Col className=\"hide-on-xs\" sm={2}></Col>\r\n        <Col sm={4}>\r\n          <ListGroup className=\"workout-options-list\">\r\n            {workouts.map(workout => (\r\n              <ListGroup.Item>\r\n                <Form.Check type=\"checkbox\" id={workout.id} label={workout.value}\r\n                  checked={this.state.selectedWorkoutIds.includes(workout.id)}\r\n                  onChange={() => this.onSelectedWorkoutsOptionsChange(workout.id)}></Form.Check>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n          <Button size=\"sm\" variant=\"light\" style={{ marginTop: \"5px\" }}\r\n            onClick={() => this.selectAllExerciseOptions()}>\r\n            Select All Exercises\r\n        </Button>\r\n        </Col>\r\n        <Col sm={4}>\r\n          <Form className=\"advanced-input-options\">\r\n            <Form.Group controlId=\"numberOfReps\" onChange={this.onChangeInputs}>\r\n              <Form.Label>Number of Reps</Form.Label>\r\n              <Form.Control type=\"string\" placeholder=\"Random\" defaultValue={this.state.numberOfReps} />\r\n              <Form.Text className=\"text-danger\">{this.state.errors.numberOfReps}</Form.Text>\r\n              <Form.Text className=\"text-muted\">\r\n                Leave blank for random number of reps between 1 and 15.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"numberOfExercises\" onChange={this.onChangeInputs}>\r\n              <Form.Label>Number of Different Exercises</Form.Label>\r\n              <Form.Control type=\"string\" defaultValue={this.state.numberOfExercises} />\r\n              <Form.Text className=\"text-danger\">{this.state.errors.numberOfExercises}</Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"addMountainClimbers\" onChange={this.changeMountainClimberState}\r\n              style={{ marginTop: \"1.5rem\" }}>\r\n              <Form.Check type=\"checkbox\" label=\"Add 20 Mountain Climbers\" checked={this.state.addMountainClimbers}></Form.Check>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>);\r\n    } else {\r\n      // not intro - create random workout based on input\r\n      const workoutIds = this.state.selectedWorkoutIds;\r\n      const numberOfExercises = this.state.numberOfExercises;\r\n      const numberOfReps = (this.state.numberOfReps === '' ? Math.ceil(Math.random() * 15) : this.state.numberOfReps);\r\n      const selectedWorkouts = workouts.filter((workout) => {\r\n        return workoutIds.some((id) => {\r\n          return workout.id === id;\r\n        })\r\n      });\r\n      let randomWorkouts = [];\r\n      for(var i = 0; i < numberOfExercises; i++) {\r\n        var randomIndex = Math.floor(Math.random() * selectedWorkouts.length);\r\n        randomWorkouts.push(selectedWorkouts[randomIndex]);\r\n        selectedWorkouts.splice(randomIndex, 1);\r\n      }\r\n      content = (<ul>\r\n        {randomWorkouts.map((item) => (\r\n          <li key={item.id}>{numberOfReps} {item.value}</li>\r\n        ))}\r\n        {this.state.addMountainClimbers ? <li>{numberOfReps} Mountain Climbers</li> : ''}\r\n      </ul>);\r\n    }\r\n\r\n    return (\r\n      <Container id=\"main-container\" fluid>\r\n        <Row className=\"intro-information\">\r\n          <Col>\r\n            <div>\r\n              <h4>Advanced Options</h4>\r\n            </div>\r\n            <div>{message}</div>\r\n          </Col>\r\n        </Row>\r\n        {content}\r\n        <Row className=\"random-button-row\">\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <Button className=\"random-button\" variant=\"primary\" size=\"lg\" block\r\n              onClick={this.state.intro ? () => this.runRandomWorkout() : () => this.backToForm()}>\r\n              {this.state.intro ? \"Run It!\" : \"Back To Options\"}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"text-danger\">{this.state.submitError}</div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdvancedOptions;\r\n","import React from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport RandomWorkout from './RandomWorkout';\r\nimport YogaWorkout from './YogaWorkout';\r\nimport AdvancedOptions from './AdvancedOptions';\r\nimport './WorkoutContainer.css';\r\n\r\nclass WorkoutContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Tabs defaultActiveKey=\"randomWorkout\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"randomWorkout\" title=\"Random Workout\">\r\n          <RandomWorkout />\r\n        </Tab>\r\n        <Tab eventKey=\"yoga\" title=\"Random Yoga Pose\">\r\n          <YogaWorkout />\r\n        </Tab>\r\n        <Tab eventKey=\"advanced\" title=\"Advanced Options\">\r\n          <AdvancedOptions />\r\n        </Tab>\r\n      </Tabs>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkoutContainer;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass AnxietyContainer extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <Container id=\"anxiety-container\">\r\n          <Row>\r\n            <Col>\r\n              <img alt=\"breathing-gif\" src=\"https://media.giphy.com/media/krP2NRkLqnKEg/source.gif\"></img>\r\n              <p>\r\n                <a href=\"https://giphy.com/gifs/help-satisfying-breathe-krP2NRkLqnKEg\">via GIPHY</a>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnxietyContainer;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm>\r\n              <div className=\"bottom\">\r\n                <a href=\"https://github.com/schwabthedeck/random-workout-generator\">\r\n                  <FontAwesomeIcon icon={faGithub} /> Source\r\n                </a>\r\n              </div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"bottom\">&#169;2020 <a href=\"https://janeschwab.co\">janeschwab.co</a></div>\r\n            </Col>\r\n            <Col sm>\r\n              <div className=\"bottom\">\r\n                <div>Sound from <a href=\"https://www.zapsplat.com\" target=\"_blank\" rel=\"noopener noreferrer\">Zapsplat.com</a></div>\r\n                <div>Yoga information from <a href=\"https://yogarove.com/\" target=\"_blank\" rel=\"noopener noreferrer\">yogarove.com</a></div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport TopRow from './components/TopRow';\r\nimport WorkoutContainer from './components/WorkoutContainer';\r\nimport AnxietyContainer from './components/AnxietyContainer';\r\nimport Footer from './components/Footer';\r\nimport './MainContainer.css';\r\n\r\nclass MainContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anxious: false\r\n    }\r\n  }\r\n\r\n  deepBreath() {\r\n    this.setState({\r\n      anxious: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MainContainer\">\r\n        <div className=\"non-footer-content\">\r\n          <TopRow anxiousOnClick={() => this.deepBreath()} />\r\n          {this.state.anxious ? <AnxietyContainer /> : <WorkoutContainer />}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MainContainer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport MainContainer from './MainContainer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}