{"version":3,"sources":["components/zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.mp3","components/images/20BeginnerYogaPosesNumbered.png","components/MoveReminder.js","components/TopRow.js","components/RandomWorkout.js","components/YogaWorkout.js","components/WorkoutContainer.js","components/AnxietyContainer.js","components/Footer.js","MainContainer.js","serviceWorker.js","index.js"],"names":["module","exports","MoveReminder","state","checked","showAlert","handleChange","bind","rememberToMove","timeoutFunction","audio","Audio","alertNoise","this","setState","setTimeout","clearTimeout","play","Card","className","onChange","Alert","variant","show","onClose","closeAlert","dismissible","React","Component","TopRow","Container","fluid","Row","Col","xsm","Button","size","onClick","window","location","reload","props","anxiousOnClick","ChooseAWorkout","workouts","Math","floor","random","length","RandomWorkout","intro","buttonText","workout","repNumber","ceil","workoutText","message","map","item","key","id","md","span","offset","block","chooseWorkout","ChooseAYogaPose","yogaPoses","poseName","backgroundPosition","width","height","url","YogaWorkout","yogaPose","yogaPoseContent","divImageStyle","backgroundImage","yogaImage","margin","borderRadius","style","href","target","rel","chooseYogaPose","WorkoutContainer","Tabs","defaultActiveKey","Tab","eventKey","title","AnxietyContainer","alt","src","Footer","icon","faGithub","MainContainer","anxious","deepBreath","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f6e1ca58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.18dbe7e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/20BeginnerYogaPosesNumbered.29971f67.png\";","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Switch from \"react-switch\";\r\nimport './MoveReminder.css';\r\nimport alertNoise from './zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.mp3';\r\n\r\nclass MoveReminder extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      checked: false,\r\n      showAlert: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.rememberToMove = this.rememberToMove.bind(this);\r\n    this.timeoutFunction = {};\r\n    this.audio = new Audio(alertNoise);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    this.setState({ checked: checked });\r\n    if (checked) {\r\n      this.timeoutFunction = setTimeout(this.rememberToMove, 3.6e+6);\r\n      // this.timeoutFunction = setTimeout(this.rememberToMove, 3000);\r\n    } else {\r\n      clearTimeout(this.timeoutFunction);\r\n    }\r\n  };\r\n\r\n  rememberToMove() {\r\n    this.audio.play();\r\n    this.setState({ showAlert: true });\r\n    // alert(\"It's been an hour! Get up and move!\");\r\n  }\r\n\r\n  closeAlert() {\r\n    this.setState({ showAlert: false });\r\n    this.timeoutFunction = setTimeout(this.rememberToMove, 3.6e+6);\r\n    // this.timeoutFunction = setTimeout(this.rememberToMove, 3000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"move-reminder\">\r\n        <label>\r\n          <div className=\"switch-label\">Remind me to move every hour!</div>\r\n          <Switch onChange={this.handleChange} checked={this.state.checked} className=\"switch\" />\r\n        </label>\r\n        <Alert variant=\"info\" show={this.state.showAlert} onClose={() => this.closeAlert()} dismissible>\r\n          <p>It's been an hour! Get up and move!</p>\r\n        </Alert>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoveReminder;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport MoveReminder from './MoveReminder';\r\n\r\nclass TopRow extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"top-row\">\r\n        <Row>\r\n          <Col xsm={4}>\r\n            <Button className=\"reset-button\" variant=\"outline-primary\" size=\"sm\"\r\n              onClick={() => window.location.reload(false)}>\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n          <Col xsm={4}>\r\n            <MoveReminder />\r\n          </Col>\r\n          <Col xsm={4}>\r\n            <Button className=\"anxiety-button\" variant=\"warning\" size=\"sm\"\r\n              onClick={this.props.anxiousOnClick}>\r\n              Help, I'm Anxious!\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopRow;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass RandomWorkout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intro: true,\r\n      buttonText: \"Pick Me A Random Workout!\",\r\n      workout: [],\r\n      repNumber: 0\r\n    }\r\n  }\r\n\r\n  chooseWorkout() {\r\n    this.setState({\r\n      intro: false,\r\n      buttonText: \"I want a new workout!\",\r\n      workout: ChooseAWorkout(),\r\n      repNumber: Math.ceil(Math.random() * 14),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let workoutText, message;\r\n    if (!this.state.intro) {\r\n      message = \"\";\r\n      workoutText = (\r\n        <ul>\r\n          {this.state.workout.map(item => (\r\n            <li key={item}>{this.state.repNumber} {item}</li>\r\n          ))}\r\n          <li>20 Mountain Climbers</li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      message = \"Gives you a random short workout to do anywhere.\";\r\n    }\r\n    return (\r\n      <Container id=\"main-container\" fluid>\r\n        <Row className=\"intro-information\">\r\n          <Col>\r\n            <div>\r\n              <h4>Welcome to the Random Workout Generator!</h4>\r\n              <div>{message}</div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {workoutText}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"random-button-row\">\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <Button className=\"random-button\" variant=\"primary\" size=\"lg\" block\r\n              onClick={() => this.chooseWorkout()}>\r\n              {this.state.buttonText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ChooseAWorkout() {\r\n  var workouts = [\r\n    [\"Pushups\", \"Crunches\", \"Squats\", \"Burpees\"],\r\n    [\"Bicep Curls\", \"Spider Crunch\", \"Shoulder Press\", \"Dips\"],\r\n    [\"Upright Row\", \"Superman Crunch\", \"Side Lunges\", \"Tri Extensions\"],\r\n    [\"Quick Squats\", \"Dumbbell Rows\", \"Side to Side Lunge Walk\", \"Zottman Curl\"],\r\n    [\"Squat with Weight Swing\", \"Side Crunches\", \"Side Plank Rotations with Overhead Reach\", \"Incline Curl\"]\r\n  ];\r\n\r\n  var randomNumber = Math.floor(Math.random() * workouts.length);\r\n  return workouts[randomNumber];\r\n}\r\n\r\nexport default RandomWorkout;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n// import yogaImage from './images/20BeginnerYogaPoses.png';\r\nimport yogaImage from './images/20BeginnerYogaPosesNumbered.png';\r\n\r\nclass YogaWorkout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intro: true,\r\n      buttonText: \"Pick Me A Random Yoga Pose!\",\r\n      yogaPose: {}\r\n    }\r\n  }\r\n\r\n  chooseYogaPose() {\r\n    this.setState({\r\n      intro: false,\r\n      buttonText: \"Choose a new yoga pose!\",\r\n      yogaPose: ChooseAYogaPose()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let yogaPoseContent, message;\r\n    if(!this.state.intro) {\r\n      const divImageStyle = {\r\n        backgroundImage: 'url(' + yogaImage + ')',\r\n        backgroundPosition: this.state.yogaPose.backgroundPosition,\r\n        width: this.state.yogaPose.width,\r\n        height: this.state.yogaPose.height,\r\n        margin: 'auto',\r\n        borderRadius: '10px'\r\n      }\r\n      message = \"Hold pose 3-5 breaths. Pay attention to the way the pose makes your body feel.\";\r\n      yogaPoseContent = (\r\n        <div>\r\n          <h6>{this.state.yogaPose.poseName}</h6>\r\n          <div style={divImageStyle}></div>\r\n          <div><a href={this.state.yogaPose.url} target=\"_blank\" rel=\"noopener noreferrer\">More information about this pose</a></div>\r\n        </div>\r\n      );\r\n    } else {\r\n      message = \"Gives you a random yoga pose to do as a stretch break.\"\r\n    }\r\n    return (\r\n      <Container id=\"main-container\" fluid>\r\n        <Row className=\"intro-information\">\r\n          <Col>\r\n            <div>\r\n              <h4>Random Yoga Pose Selector</h4>\r\n              <div>{message}</div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {yogaPoseContent}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"random-button-row\">\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <Button className=\"random-button\" variant=\"primary\" size=\"lg\" block\r\n              onClick={() => this.chooseYogaPose()}>\r\n              {this.state.buttonText}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ChooseAYogaPose() {\r\n  const yogaPoses = [\r\n    {\r\n      poseName: \"Mountain\",\r\n      backgroundPosition: \"-82px -262px\",\r\n      width: \"75px\",\r\n      height: \"171px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#mountain\"\r\n    },\r\n    {\r\n      poseName: \"Tree\",\r\n      backgroundPosition: \"-215px -262px\",\r\n      width: \"76px\",\r\n      height: \"170px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#tree\"\r\n    },\r\n    {\r\n      poseName: \"Chair\",\r\n      backgroundPosition: \"-354px -259px\",\r\n      width: \"75px\",\r\n      height: \"170px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#chair\"\r\n    },\r\n    {\r\n      poseName: \"Standing Fold\",\r\n      backgroundPosition: \"-510px -269px\",\r\n      width: \"65px\",\r\n      height: \"160px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#standinghalfbend\"\r\n    },\r\n    {\r\n      poseName: \"Down Dog\",\r\n      backgroundPosition: \"-640px -272px\",\r\n      width: \"140px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#downdog\"\r\n    },\r\n    {\r\n      poseName: \"Plank\",\r\n      backgroundPosition: \"-24px -467px\",\r\n      width: \"157px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#plank\"\r\n    },\r\n    {\r\n      poseName: \"Low Lunge\",\r\n      backgroundPosition: \"-186px -467px\",\r\n      width: \"155px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#lowlunge\"\r\n    },\r\n    {\r\n      poseName: \"High Lunge\",\r\n      backgroundPosition: \"-355px -465px\",\r\n      width: \"130px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#highlunge\"\r\n    },\r\n    {\r\n      poseName: \"Warrior I\",\r\n      backgroundPosition: \"-498px -459px\",\r\n      width: \"120px\",\r\n      height: \"155px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#warrior1\"\r\n    },\r\n    {\r\n      poseName: \"Warrior II\",\r\n      backgroundPosition: \"-628px -472px\",\r\n      width: \"166px\",\r\n      height: \"144px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#warrior2\"\r\n    },\r\n    {\r\n      poseName: \"Triangle\",\r\n      backgroundPosition: \"-38px -670px\",\r\n      width: \"144px\",\r\n      height: \"150px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#triangle\"\r\n    },\r\n    {\r\n      poseName: \"Cobra\",\r\n      backgroundPosition: \"-186px -688px\",\r\n      width: \"178px\",\r\n      height: \"130px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#babycobra\"\r\n    },\r\n    {\r\n      poseName: \"Locust\",\r\n      backgroundPosition: \"-362px -688px\",\r\n      width: \"174px\",\r\n      height: \"128px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#locust\"\r\n    },\r\n    {\r\n      poseName: \"Cat\",\r\n      backgroundPosition: \"-530px -688px\",\r\n      width: \"130px\",\r\n      height: \"128px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#cat\"\r\n    },\r\n    {\r\n      poseName: \"Cow\",\r\n      backgroundPosition: \"-670px -682px\",\r\n      width: \"130px\",\r\n      height: \"128px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#cow\"\r\n    },\r\n    {\r\n      poseName: \"Easy Seat\",\r\n      backgroundPosition: \"-62px -862px\",\r\n      width: \"98px\",\r\n      height: \"122px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#easyseat\"\r\n    },\r\n    {\r\n      poseName: \"Seated Twist\",\r\n      backgroundPosition: \"-228px -862px\",\r\n      width: \"115px\",\r\n      height: \"124px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#halffish\"\r\n    },\r\n    {\r\n      poseName: \"Hero\",\r\n      backgroundPosition: \"-368px -862px\",\r\n      width: \"88px\",\r\n      height: \"120px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#hero\"\r\n    },\r\n    {\r\n      poseName: \"Child's Pose\",\r\n      backgroundPosition: \"-470px -872px\",\r\n      width: \"144px\",\r\n      height: \"110px\",\r\n      url: \"https://yogarove.com/20-yoga-poses-for-beginners/#child\"\r\n    }\r\n  ];\r\n\r\n  var randomNumber = Math.floor(Math.random() * yogaPoses.length);\r\n  return yogaPoses[randomNumber];\r\n}\r\n\r\nexport default YogaWorkout;","import React from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport RandomWorkout from './RandomWorkout';\r\nimport YogaWorkout from './YogaWorkout';\r\nimport './WorkoutContainer.css';\r\n\r\nclass WorkoutContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Tabs defaultActiveKey=\"randomWorkout\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"randomWorkout\" title=\"Random Workout\">\r\n          <RandomWorkout />\r\n        </Tab>\r\n        <Tab eventKey=\"yoga\" title=\"Random Yoga Pose\">\r\n          <YogaWorkout />\r\n        </Tab>\r\n      </Tabs>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkoutContainer;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass AnxietyContainer extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <Container id=\"anxiety-container\">\r\n          <Row>\r\n            <Col>\r\n              <img alt=\"breathing-gif\" src=\"https://media.giphy.com/media/krP2NRkLqnKEg/source.gif\"></img>\r\n              <p>\r\n                <a href=\"https://giphy.com/gifs/help-satisfying-breathe-krP2NRkLqnKEg\">via GIPHY</a>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnxietyContainer;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <div className=\"bottom\">\r\n                <a href=\"https://github.com/schwabthedeck/random-workout-generator\">\r\n                  <FontAwesomeIcon icon={faGithub} /> Source\r\n                </a>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"bottom\">&#169;2020 <a href=\"https://janeschwab.co\">janeschwab.co</a></div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"bottom\">\r\n                <div>Sound from <a href=\"https://www.zapsplat.com\" target=\"_blank\" rel=\"noopener noreferrer\">Zapsplat.com</a></div>\r\n                <div>Yoga information from <a href=\"https://yogarove.com/\" target=\"_blank\" rel=\"noopener noreferrer\">yogarove.com</a></div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport TopRow from './components/TopRow';\r\nimport WorkoutContainer from './components/WorkoutContainer';\r\nimport AnxietyContainer from './components/AnxietyContainer';\r\nimport Footer from './components/Footer';\r\nimport './MainContainer.css';\r\n\r\nclass MainContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anxious: false\r\n    }\r\n  }\r\n\r\n  deepBreath() {\r\n    this.setState({\r\n      anxious: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MainContainer\">\r\n        <TopRow anxiousOnClick={() => this.deepBreath()} />        \r\n        {this.state.anxious ? <AnxietyContainer /> : <WorkoutContainer /> }\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default MainContainer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport MainContainer from './MainContainer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainContainer />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}