{"version":3,"sources":["components/zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.mp3","components/MoveReminder.js","components/Footer.js","MainInput.js","serviceWorker.js","index.js"],"names":["module","exports","MoveReminder","state","checked","showAlert","handleChange","bind","rememberToMove","timeoutFunction","audio","Audio","alertNoise","this","setState","setTimeout","clearTimeout","play","Card","className","onChange","Alert","variant","show","onClose","closeAlert","dismissible","React","Component","Footer","Container","Row","Col","href","IntroInformation","props","ChooseAWorkout","workouts","Math","floor","random","length","MainInput","intro","buttonText","workoutInfo","repNumber","anxious","workout","ceil","document","getElementById","style","display","workoutText","map","item","key","fluid","xsm","Button","size","onClick","window","location","reload","disabled","deepBreath","id","md","span","offset","block","chooseWorkout","alt","src","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c39b5b8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.18dbe7e4.mp3\";","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Switch from \"react-switch\";\r\nimport './MoveReminder.css';\r\nimport alertNoise from './zapsplat_multimedia_bell_chime_alert_synthesised_positive_002_48012.mp3';\r\n\r\nclass MoveReminder extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      checked: false,\r\n      showAlert: false\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.rememberToMove = this.rememberToMove.bind(this);\r\n    this.timeoutFunction = {};\r\n    this.audio = new Audio(alertNoise);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    this.setState({ checked: checked });\r\n    if (checked) {\r\n      this.timeoutFunction = setTimeout(this.rememberToMove, 3.6e+6);\r\n      // this.timeoutFunction = setTimeout(this.rememberToMove, 3000);\r\n    } else {\r\n      clearTimeout(this.timeoutFunction);\r\n    }\r\n  };\r\n\r\n  rememberToMove() {\r\n    this.audio.play();\r\n    this.setState({ showAlert: true });\r\n    // alert(\"It's been an hour! Get up and move!\");\r\n  }\r\n\r\n  closeAlert() {\r\n    this.setState({ showAlert: false });\r\n    this.timeoutFunction = setTimeout(this.rememberToMove, 3.6e+6);\r\n    // this.timeoutFunction = setTimeout(this.rememberToMove, 3000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"move-reminder\">\r\n        <label>\r\n          <div className=\"switch-label\">Remind me to move every hour!</div>\r\n          <Switch onChange={this.handleChange} checked={this.state.checked} className=\"switch\" />\r\n        </label>\r\n        <Alert variant=\"info\" show={this.state.showAlert} onClose={() => this.closeAlert()} dismissible>\r\n          <p>It's been an hour! Get up and move!</p>\r\n        </Alert>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoveReminder;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Container>\r\n          <Row>\r\n            <Col>Sound from <a href=\"https://www.zapsplat.com\">Zapsplat.com</a></Col>\r\n            <Col>\r\n              &#169;2020 <a href=\"https://janeschwab.co\">janeschwab.co</a>\r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport MoveReminder from './components/MoveReminder';\r\nimport Footer from './components/Footer';\r\nimport './MainInput.css';\r\n// import WorkoutList from './WorkoutList'\r\n\r\n// ugly but it works - will refractor into more components moving forward\r\n\r\nclass MainInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      intro: true,\r\n      buttonText: \"Pick Me A Random Workout!\",\r\n      workoutInfo: [],\r\n      repNumber: 0,\r\n      anxious: false,\r\n    }\r\n  }\r\n\r\n  chooseWorkout() {\r\n    this.setState({\r\n      intro: false,\r\n      buttonText: \"I want a new workout!\",\r\n      workout: ChooseAWorkout(),\r\n      repNumber: Math.ceil(Math.random() * 14),\r\n    });\r\n  }\r\n\r\n  deepBreath() {\r\n    this.setState({\r\n      intro: false,\r\n      anxious: true,\r\n    });\r\n    document.getElementById(\"main-container\").style.display = \"none\";\r\n    document.getElementById(\"anxiety-container\").style.display = \"block\";\r\n  }\r\n\r\n  render() {\r\n    let workoutText;\r\n    if (!this.state.intro && !this.state.anxious) {\r\n      workoutText = (\r\n        <Row>\r\n          <Col>\r\n            <ul>\r\n              {this.state.workout.map(item => (\r\n                <li key={item}>{this.state.repNumber} {item}</li>\r\n              ))}\r\n              <li>20 Mountain Climbers</li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"MainInput\">\r\n        <Container fluid className=\"top-row\">\r\n          <Row>\r\n            <Col xsm={4}>\r\n              <Button className=\"reset-button\" variant=\"outline-primary\" size=\"sm\"\r\n                onClick={() => window.location.reload(false)}\r\n                disabled={this.state.intro}>\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n            <Col xsm={4}>\r\n              <MoveReminder />\r\n            </Col>\r\n            <Col xsm={4}>\r\n              <Button className=\"anxiety-button\" variant=\"warning\" size=\"sm\"\r\n                onClick={() => this.deepBreath()}>\r\n                Help, I'm Anxious!\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        {/* <Container>\r\n          <Row>\r\n            <Col>\r\n              <WorkoutList />\r\n            </Col>\r\n          </Row>\r\n        </Container> */}\r\n        <Container id=\"main-container\" fluid>\r\n          <Row className=\"intro-information\">\r\n            <Col>\r\n              <IntroInformation />\r\n            </Col>\r\n          </Row>\r\n          {workoutText}\r\n\r\n          <Row className=\"random-button-row\">\r\n            <Col md={{ span: 8, offset: 2 }}>\r\n              <Button className=\"random-button\" variant=\"primary\" size=\"lg\" block\r\n                onClick={() => this.chooseWorkout()}>\r\n                {this.state.buttonText}\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        </Container>\r\n        <Container id=\"anxiety-container\">\r\n          <Row>\r\n            <Col>\r\n              {/* <div style={{ width: '100%', height: '0', paddingBottom: '108%', position: 'relative' }}>\r\n                <iframe title=\"breath-gif\" src=\"https://giphy.com/embed/krP2NRkLqnKEg\" width=\"100%\" height=\"100%\" style={{ position: 'absolute' }} frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe>\r\n              </div>\r\n              <p>\r\n                <a href=\"https://giphy.com/gifs/help-satisfying-breathe-krP2NRkLqnKEg\">via GIPHY</a>\r\n              </p> */}\r\n              <img alt=\"breathing-gif\" src=\"https://media.giphy.com/media/krP2NRkLqnKEg/source.gif\"></img>\r\n              <p>\r\n                <a href=\"https://giphy.com/gifs/help-satisfying-breathe-krP2NRkLqnKEg\">via GIPHY</a>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction IntroInformation(props) {\r\n  return (\r\n    <div>\r\n      <h4>Welcome to the Random Workout Generator!</h4>\r\n      <div>This was designed to produce a random short workout you can do at home.</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ChooseAWorkout() {\r\n  var workouts = [\r\n    [\"Pushups\", \"Crunches\", \"Squats\", \"Burpees\"],\r\n    [\"Bicep Curls\", \"Spider Crunch\", \"Shoulder Press\", \"Dips\"],\r\n    [\"Upright Row\", \"Superman Crunch\", \"Side Lunges\", \"Tri Extensions\"],\r\n    [\"Quick Squats\", \"Dumbbell Rows\", \"Side to Side Lunge Walk\", \"Zottman Curl\"],\r\n    [\"Squat with Weight Swing\", \"Side Crunches\", \"Side Plank Rotations with Overhead Reach\", \"Incline Curl\"]\r\n  ];\r\n\r\n  var randomNumber = Math.floor(Math.random() * workouts.length);\r\n  return workouts[randomNumber];\r\n}\r\n\r\nexport default MainInput;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport MainInput from './MainInput';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainInput />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}